<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.tqmall.legend.dao.feedback.FeedbackAnswerDao">

    <resultMap id = "BaseResultMap" type = "FeedbackAnswer" extends = "COMMON.BASE_RESULT_MAP">
        <result column = "feedback_id" property = "feedbackId" />
        <result column = "answer_type" property = "answerType" />
        <result column = "operator_name" property = "operatorName" />
        <result column = "answer_content" property = "answerContent" />
    </resultMap>

    <sql id = "BaseColumnList">
        <trim suffix="" suffixOverrides=",">
            <include refid = "COMMON.BASE_COLUMN_LIST" />
            feedback_id as feedbackId,
            answer_type as answerType,
            operator_name as operatorName,
            answer_content as answerContent,
        </trim>
    </sql>

    <sql id = "BaseWhereClause">
        <where>
            <trim prefixOverrides = "and">
                <include refid = "COMMON.BASE_WHERE_CLAUSE" />
                <if test = "feedbackId != null">
                    and feedback_id = #{feedbackId}
                </if>
                <if test = "answerType != null">
                    and answer_type = #{answerType}
                </if>
                <if test = "operatorName != null">
                    and operator_name = #{operatorName}
                </if>
                <if test = "answerContent != null">
                    and answer_content = #{answerContent}
                </if>
            </trim>
        </where>
    </sql>

    <sql id = "BaseUpdateSet">
        <set>
            <trim suffix="" suffixOverrides=",">
                <include refid = "COMMON.BASE_UPDATE_SET" />
                <if test = "feedbackId != null">
                    feedback_id = #{feedbackId},
                </if>
                <if test = "answerType != null">
                    answer_type = #{answerType},
                </if>
                <if test = "operatorName != null">
                    operator_name = #{operatorName},
                </if>
                <if test = "answerContent != null">
                    answer_content = #{answerContent},
                </if>
            </trim>
        </set>
    </sql>

    <!-- 查询总数 -->
    <select id = "selectCount" resultType = "java.lang.Integer">
        select count(id)
        from legend_feedback_answer
        <include refid = "BaseWhereClause" />
    </select>

    <!-- 查询 -->
    <select id = "select" resultMap = "BaseResultMap">
        select
        <include refid = "BaseColumnList" />
        from legend_feedback_answer
        <include refid = "BaseWhereClause" />
        <include refid = "COMMON.ORDER_BY" />
        <include refid = "COMMON.LIMIT" />
    </select>

    <!-- 根据ID查询 -->
    <select id = "selectById" resultMap = "BaseResultMap">
        select
        <include refid = "BaseColumnList" />
        from legend_feedback_answer
        where id = #{id} and is_deleted = 'N'
    </select>

    <!-- 根据IDS批量查询 -->
    <select id = "selectByIds" resultMap = "BaseResultMap">
        select
        <include refid = "BaseColumnList" />
        from legend_feedback_answer
        where id in
        (
        <foreach collection = "array" index = "index" item = "tag" separator = ",">
            #{tag}
        </foreach>
        ) and is_deleted = 'N'
    </select>


    <!-- 根据IDS批量删除 -->
    <update id = "deleteByIds">
        update legend_feedback_answer
        set is_deleted='Y'
        where id in
        (
        <foreach collection = "array" index = "index" item = "tag" separator = ",">
            #{tag}
        </foreach>
        )
    </update>

    <!-- 根据ID删除 -->
    <update id = "deleteById">
        update legend_feedback_answer
        set is_deleted='Y'
        where id=#{id}
    </update>

    <!-- 删除 -->
    <delete id = "delete">
        update legend_feedback_answer
        set is_deleted='Y'
        <include refid = "BaseWhereClause" />
    </delete>

    <!-- 添加   -->
    <insert id = "insert" useGeneratedKeys = "true" keyProperty = "id">
        insert into legend_feedback_answer (
        <trim suffix="" suffixOverrides=",">
            <include refid = "COMMON.BASE_INSERT_COLUMN" />
            <if test = "feedbackId != null">
                feedback_id,
            </if>
            <if test = "answerType != null">
                answer_type,
            </if>
            <if test = "operatorName != null">
                operator_name,
            </if>
            <if test = "answerContent != null">
                answer_content,
            </if>
        </trim>
        )
        values (
        <trim suffix="" suffixOverrides=",">
            <include refid = "COMMON.BASE_INSERT_VALUE" />
            <if test = "feedbackId != null">
                #{feedbackId},
            </if>
            <if test = "answerType != null">
                #{answerType},
            </if>
            <if test = "operatorName != null">
                #{operatorName},
            </if>
            <if test = "answerContent != null">
                #{answerContent},
            </if>
        </trim>
        )
    </insert>

    <!-- 通过ID更新 -->
    <update id = "updateById">
        update legend_feedback_answer
        <include refid = "BaseUpdateSet" />
        where id = #{id}
    </update>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into legend_feedback_answer (
        <trim suffix="" suffixOverrides=",">
            is_deleted,
            gmt_create,
            creator,
            gmt_modified,
            modifier,
            feedback_id,
            answer_type,
            operator_name,
            answer_content,
        </trim>
        )
        values

        <foreach collection="list" item="item" index="index" separator=",">
            (
            <trim suffix="" suffixOverrides=",">
                'N',
                <if test="item.gmtCreate != null">
                    #{item.gmtCreate},
                </if>
                <if test="item.gmtCreate == null">
                    now(),
                </if>
                <if test="item.creator != null">
                    #{item.creator},
                </if>
                <if test="item.creator == null">
                    0,
                </if>
                <if test="item.gmtModified != null">
                    #{item.gmtModified},
                </if>
                <if test="item.gmtModified == null">
                    now(),
                </if>
                <if test="item.creator != null">
                    #{item.creator},
                </if>
                <if test="item.creator == null">
                    0,
                </if>
                <if test="item.feedbackId != null">
                    #{item.feedbackId},
                </if>
                <if test="item.feedbackId == null">
                    0 ,
                </if>
                <if test="item.answerType != null">
                    #{item.answerType},
                </if>
                <if test="item.answerType == null">
                    0 ,
                </if>
                <if test="item.operatorName != null">
                    #{item.operatorName},
                </if>
                <if test="item.operatorName == null">
                    '',
                </if>
                <if test="item.answerContent != null">
                    #{item.answerContent},
                </if>
                <if test="item.answerContent == null">
                    '',
                </if>
            </trim>
            )
        </foreach>
    </insert>

</mapper>
