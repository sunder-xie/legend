<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tqmall.legend.dao.warehousein.WarehouseInDetailDao">

    <resultMap id = "BaseResultMap" type = "WarehouseInDetail" extends = "COMMON.BASE_RESULT_MAP">
        <result column = "shop_id" property = "shopId" />
        <result column = "warehouse_in_sn" property = "warehouseInSn" />
        <result column = "warehouse_in_id" property = "warehouseInId" />
        <result column = "goods_id" property = "goodsId" />
        <result column = "goods_sn" property = "goodsSn" />
        <result column = "goods_name" property = "goodsName" />
        <result column = "goods_format" property = "goodsFormat" />
        <result column = "goods_count" property = "goodsCount" />
        <result column = "goods_damage" property = "goodsDamage" />
        <result column = "purchase_price" property = "purchasePrice" />
        <result column = "purchase_amount" property = "purchaseAmount" />
        <result column = "goods_real_count" property = "goodsRealCount" />
        <result column = "tqmall_goods_sn" property = "tqmallGoodsSn" />
        <result column = "tqmall_goods_id" property = "tqmallGoodsId" />
        <result column = "measure_unit" property = "measureUnit" />
        <result column = "depot" property = "depot" />
        <result column = "rel_sn" property = "relSn" />
        <result column = "status" property = "status" />
        <result column = "car_info" property = "carInfo" />
    </resultMap>

    <sql id = "BaseColumnList">
        <trim suffix="" suffixOverrides=",">
            <include refid = "COMMON.BASE_COLUMN_LIST" />
            shop_id as shopId,
            warehouse_in_sn as warehouseInSn,
            warehouse_in_id as warehouseInId,
            goods_id as goodsId,
            goods_sn as goodsSn,
            goods_name as goodsName,
            goods_format as goodsFormat,
            goods_count as goodsCount,
            goods_damage as goodsDamage,
            purchase_price as purchasePrice,
            purchase_amount as purchaseAmount,
            goods_real_count as goodsRealCount,
            tqmall_goods_sn as tqmallGoodsSn,
            tqmall_goods_id as tqmallGoodsId,
            measure_unit as measureUnit,
            depot as depot,
            rel_sn as relSn,
            status as status,
            car_info as carInfo,
        </trim>
    </sql>

    <sql id = "BaseWhereClause">
        <where>
            <trim prefixOverrides = "and">
                <include refid = "COMMON.BASE_WHERE_CLAUSE" />
                <if test = "shopId != null">
                    and shop_id = #{shopId}
                </if>
                <if test = "warehouseInSn != null">
                    and warehouse_in_sn = #{warehouseInSn}
                </if>
                <if test = "warehouseInId != null">
                    and warehouse_in_id = #{warehouseInId}
                </if>
                <if test = "goodsId != null">
                    and goods_id = #{goodsId}
                </if>
                <if test="goodsList !=null">
                    and goods_id in
                    (
                    <foreach collection="goodsList" index="index" item="tag" separator=",">
                        #{tag}
                    </foreach>
                    )
                </if>
                <if test = "goodsSn != null">
                    and goods_sn = #{goodsSn}
                </if>
                <if test = "goodsName != null">
                    and goods_name = #{goodsName}
                </if>
                <if test = "goodsFormat != null">
                    and goods_format = #{goodsFormat}
                </if>
                <if test = "goodsCount != null">
                    and goods_count = #{goodsCount}
                </if>
                <if test = "goodsDamage != null">
                    and goods_damage = #{goodsDamage}
                </if>
                <if test = "purchasePrice != null">
                    and purchase_price = #{purchasePrice}
                </if>
                <if test = "purchaseAmount != null">
                    and purchase_amount = #{purchaseAmount}
                </if>
                <if test = "goodsRealCount != null">
                    and goods_real_count = #{goodsRealCount}
                </if>
                <if test = "tqmallGoodsSn != null">
                    and tqmall_goods_sn = #{tqmallGoodsSn}
                </if>
                <if test = "tqmallGoodsId != null">
                    and tqmall_goods_id = #{tqmallGoodsId}
                </if>
                <if test = "measureUnit != null">
                    and measure_unit = #{measureUnit}
                </if>
                <if test = "depot != null">
                    and depot = #{depot}
                </if>
                <if test = "relSn != null">
                    and rel_sn = #{relSn}
                </if>
                <if test = "status != null">
                    and status = #{status}
                </if>
                <if test="carInfo != '0'.toString() and carInfo != null">
                    <![CDATA[
                      and car_info like CONCAT('%', #{carInfo}, '%')
                    ]]>
                </if>
                <if test="goodsFormatLike != null">
                    and goods_format like CONCAT('%',#{goodsFormatLike},'%')
                </if>
                <if test="goodsNameLike != null">
                    and goods_Name like CONCAT('%',#{goodsNameLike},'%')
                </if>
                <if test="keyword != null">
                    and ( goods_sn like CONCAT('%',#{keyword},'%')
                    or goods_name like CONCAT('%',#{keyword},'%')
                    or goods_format like CONCAT('%',#{keyword},'%')
                    )
                </if>
                <if test="goodsRealCountComp != null">
                    <![CDATA[
                      and goods_real_count > #{goodsRealCountComp}
                    ]]>
                </if>
                <if test="snList !=null">
                    and warehouse_in_sn in
                    (
                    <foreach collection="snList" index="index" item="tag" separator=",">
                        #{tag}
                    </foreach>
                    )
                </if>
                <if test="startTime != null">
                    <![CDATA[
                    and gmt_create >= #{startTime}
                     ]]>
                </if>
                <if test="endTime != null">
                    <![CDATA[
                    and gmt_create <= #{endTime}
                     ]]>
                </if>
                <if test="statuss != null">
                    and status in (
                    <foreach collection="statuss" item="tag" separator=",">
                        #{tag}
                    </foreach>
                    )
                </if>
                <if test="warehouseInIds != null">
                    and warehouse_in_id in (
                    <foreach collection="warehouseInIds" item="tag" separator=",">
                        #{tag}
                    </foreach>
                    )
                </if>
                <if test="statuss != null">
                    and status in (
                    <foreach collection="statuss" item="tag" separator=",">
                        #{tag}
                    </foreach>
                    )
                </if>
                <if test="warehouseInDetailIds != null">
                    and id in (
                    <foreach collection="warehouseInDetailIds" item="tag" separator=",">
                        #{tag}
                    </foreach>
                    )
                </if>
            </trim>
        </where>
    </sql>

    <sql id = "BaseUpdateSet">
        <set>
            <trim suffix="" suffixOverrides=",">
                <if test = "isDeleted != null and isDeleted != ''">
                    is_deleted=#{isDeleted},
                </if>
                gmt_modified= now(),
                <if test = "modifier != null and modifier != ''">
                    modifier=#{modifier},
                </if>

                <if test = "warehouseInSn != null">
                    warehouse_in_sn = #{warehouseInSn},
                </if>

                <if test = "goodsSn != null">
                    goods_sn = #{goodsSn},
                </if>
                <if test = "goodsName != null">
                    goods_name = #{goodsName},
                </if>
                <if test = "goodsFormat != null">
                    goods_format = #{goodsFormat},
                </if>
                <if test = "goodsCount != null">
                    goods_count = #{goodsCount},
                </if>
                <if test = "goodsDamage != null">
                    goods_damage = #{goodsDamage},
                </if>
                <if test = "purchasePrice != null">
                    purchase_price = #{purchasePrice},
                </if>
                <if test = "purchaseAmount != null">
                    purchase_amount = #{purchaseAmount},
                </if>
                <if test = "goodsRealCount != null">
                    goods_real_count = #{goodsRealCount},
                </if>
                <if test = "tqmallGoodsSn != null">
                    tqmall_goods_sn = #{tqmallGoodsSn},
                </if>
                <if test = "tqmallGoodsId != null">
                    tqmall_goods_id = #{tqmallGoodsId},
                </if>
                <if test = "measureUnit != null">
                    measure_unit = #{measureUnit},
                </if>
                <if test = "depot != null">
                    depot = #{depot},
                </if>
                <if test = "relSn != null">
                    rel_sn = #{relSn},
                </if>
                <if test = "status != null">
                    status = #{status},
                </if>
                <if test = "carInfo != null">
                    car_info = #{carInfo},
                </if>
            </trim>
        </set>
    </sql>

    <!-- 查询总数 -->
    <select id = "selectCount" resultType = "java.lang.Integer">
        select count(id)
        from legend_warehouse_in_detail
        <include refid = "BaseWhereClause" />
    </select>

    <!-- 查询 -->
    <select id = "select" resultMap = "BaseResultMap">
        select
        <include refid = "BaseColumnList" />
        from legend_warehouse_in_detail
        <include refid = "BaseWhereClause" />
        <include refid = "COMMON.ORDER_BY" />
        <include refid = "COMMON.LIMIT" />
    </select>

    <!-- 根据ID查询 -->
    <select id = "selectById" resultMap = "BaseResultMap">
        select
        <include refid = "BaseColumnList" />
        from legend_warehouse_in_detail
        where id = #{id} and is_deleted = 'N'
    </select>

    <!-- 根据IDS批量查询 -->
    <select id = "selectByIds" resultMap = "BaseResultMap">
        select
        <include refid = "BaseColumnList" />
        from legend_warehouse_in_detail
        where id in
        (
        <foreach collection = "array" index = "index" item = "tag" separator = ",">
            #{tag}
        </foreach>
        ) and is_deleted = 'N'
    </select>


    <!-- 根据IDS批量删除 -->
    <update id = "deleteByIds">
        update legend_warehouse_in_detail
        set is_deleted='Y'
        where id in
        (
        <foreach collection = "array" index = "index" item = "tag" separator = ",">
            #{tag}
        </foreach>
        )
    </update>

    <!-- 根据ID删除 -->
    <update id = "deleteById">
        update legend_warehouse_in_detail
        set is_deleted='Y'
        where id=#{id}
    </update>

    <!-- 删除 -->
    <delete id = "delete">
        update legend_warehouse_in_detail
        set is_deleted='Y'
        <include refid = "BaseWhereClause" />
    </delete>

    <!-- 添加   -->
    <insert id = "insert" useGeneratedKeys = "true" keyProperty = "id">
        insert into legend_warehouse_in_detail (
        <trim suffix="" suffixOverrides=",">
            <include refid = "COMMON.BASE_INSERT_COLUMN" />
            <if test = "shopId != null">
                shop_id,
            </if>
            <if test = "warehouseInSn != null">
                warehouse_in_sn,
            </if>
            <if test = "warehouseInId != null">
                warehouse_in_id,
            </if>
            <if test = "goodsId != null">
                goods_id,
            </if>
            <if test = "goodsSn != null">
                goods_sn,
            </if>
            <if test = "goodsName != null">
                goods_name,
            </if>
            <if test = "goodsFormat != null">
                goods_format,
            </if>
            <if test = "goodsCount != null">
                goods_count,
            </if>
            <if test = "goodsDamage != null">
                goods_damage,
            </if>
            <if test = "purchasePrice != null">
                purchase_price,
            </if>
            <if test = "purchaseAmount != null">
                purchase_amount,
            </if>
            <if test = "goodsRealCount != null">
                goods_real_count,
            </if>
            <if test = "tqmallGoodsSn != null">
                tqmall_goods_sn,
            </if>
            <if test = "tqmallGoodsId != null">
                tqmall_goods_id,
            </if>
            <if test = "measureUnit != null">
                measure_unit,
            </if>
            <if test = "depot != null">
                depot,
            </if>
            <if test = "relSn != null">
                rel_sn,
            </if>
            <if test = "status != null">
                status,
            </if>
            <if test = "carInfo != null">
                car_info,
            </if>
        </trim>
        )
        values (
        <trim suffix="" suffixOverrides=",">
            <include refid = "COMMON.BASE_INSERT_VALUE" />
            <if test = "shopId != null">
                #{shopId},
            </if>
            <if test = "warehouseInSn != null">
                #{warehouseInSn},
            </if>
            <if test = "warehouseInId != null">
                #{warehouseInId},
            </if>
            <if test = "goodsId != null">
                #{goodsId},
            </if>
            <if test = "goodsSn != null">
                #{goodsSn},
            </if>
            <if test = "goodsName != null">
                #{goodsName},
            </if>
            <if test = "goodsFormat != null">
                #{goodsFormat},
            </if>
            <if test = "goodsCount != null">
                #{goodsCount},
            </if>
            <if test = "goodsDamage != null">
                #{goodsDamage},
            </if>
            <if test = "purchasePrice != null">
                #{purchasePrice},
            </if>
            <if test = "purchaseAmount != null">
                #{purchaseAmount},
            </if>
            <if test = "goodsRealCount != null">
                #{goodsRealCount},
            </if>
            <if test = "tqmallGoodsSn != null">
                #{tqmallGoodsSn},
            </if>
            <if test = "tqmallGoodsId != null">
                #{tqmallGoodsId},
            </if>
            <if test = "measureUnit != null">
                #{measureUnit},
            </if>
            <if test = "depot != null">
                #{depot},
            </if>
            <if test = "relSn != null">
                #{relSn},
            </if>
            <if test = "status != null">
                #{status},
            </if>
            <if test = "carInfo != null">
                #{carInfo},
            </if>
        </trim>
        )
    </insert>

    <!-- 通过ID更新 -->
    <update id = "updateById">
        update legend_warehouse_in_detail
        <include refid = "BaseUpdateSet" />
        where id = #{id}
    </update>

    <!-- 通过条件更新 -->
    <update id = "update">
        update legend_warehouse_in_detail
        <include refid = "BaseUpdateSet" />
        where  shop_id =#{shopId}
        <if test = "id != null">
            AND id = #{id}
        </if>
        <if test = "warehouseInId != null">
            AND warehouse_in_id = #{warehouseInId}
        </if>
        <if test = "warehouseInSn != null">
            AND warehouse_in_sn = #{warehouseInSn}
        </if>
        <if test="goodsSn != null">
            and goods_sn = #{goodsSn}
        </if>
        <if test="tqmallGoodsSn != null">
            and tqmall_goods_sn = #{tqmallGoodsSn}
        </if>
        <if test = "goodsId != null">
            AND goods_id = #{goodsId}
        </if>
    </update>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into legend_warehouse_in_detail (
        <trim suffix="" suffixOverrides=",">
            is_deleted,
            gmt_create,
            creator,
            gmt_modified,
            modifier,
            shop_id,
            warehouse_in_sn,
            warehouse_in_id,
            goods_id,
            goods_sn,
            goods_name,
            goods_format,
            goods_count,
            goods_damage,
            purchase_price,
            purchase_amount,
            goods_real_count,
            tqmall_goods_sn,
            tqmall_goods_id,
            measure_unit,
            depot,
            rel_sn,
            status,
            car_info,
        </trim>
        )
        values

        <foreach collection="list" item="item" index="index" separator=",">
            (
            <trim suffix="" suffixOverrides=",">
                'N',
                <if test="item.gmtCreate != null">
                    #{item.gmtCreate},
                </if>
                <if test="item.gmtCreate == null">
                    now(),
                </if>
                <if test="item.creator != null">
                    #{item.creator},
                </if>
                <if test="item.creator == null">
                    0,
                </if>
                <if test="item.gmtModified != null">
                    #{item.gmtModified},
                </if>
                <if test="item.gmtModified == null">
                    now(),
                </if>
                <if test="item.creator != null">
                    #{item.creator},
                </if>
                <if test="item.creator == null">
                    0,
                </if>
                <if test="item.shopId != null">
                    #{item.shopId},
                </if>
                <if test="item.shopId == null">
                    0 ,
                </if>
                <if test="item.warehouseInSn != null">
                    #{item.warehouseInSn},
                </if>
                <if test="item.warehouseInSn == null">
                    '',
                </if>
                <if test="item.warehouseInId != null">
                    #{item.warehouseInId},
                </if>
                <if test="item.warehouseInId == null">
                    0 ,
                </if>
                <if test="item.goodsId != null">
                    #{item.goodsId},
                </if>
                <if test="item.goodsId == null">
                    0 ,
                </if>
                <if test="item.goodsSn != null">
                    #{item.goodsSn},
                </if>
                <if test="item.goodsSn == null">
                    '',
                </if>
                <if test="item.goodsName != null">
                    #{item.goodsName},
                </if>
                <if test="item.goodsName == null">
                    '',
                </if>
                <if test="item.goodsFormat != null">
                    #{item.goodsFormat},
                </if>
                <if test="item.goodsFormat == null">
                    '',
                </if>
                <if test="item.goodsCount != null">
                    #{item.goodsCount},
                </if>
                <if test="item.goodsCount == null">
                    0.00,
                </if>
                <if test="item.goodsDamage != null">
                    #{item.goodsDamage},
                </if>
                <if test="item.goodsDamage == null">
                    0.00,
                </if>
                <if test="item.purchasePrice != null">
                    #{item.purchasePrice},
                </if>
                <if test="item.purchasePrice == null">
                    0.00,
                </if>
                <if test="item.purchaseAmount != null">
                    #{item.purchaseAmount},
                </if>
                <if test="item.purchaseAmount == null">
                    0.00,
                </if>
                <if test="item.goodsRealCount != null">
                    #{item.goodsRealCount},
                </if>
                <if test="item.goodsRealCount == null">
                    0.00,
                </if>
                <if test="item.tqmallGoodsSn != null">
                    #{item.tqmallGoodsSn},
                </if>
                <if test="item.tqmallGoodsSn == null">
                    '',
                </if>
                <if test="item.tqmallGoodsId != null">
                    #{item.tqmallGoodsId},
                </if>
                <if test="item.tqmallGoodsId == null">
                    0 ,
                </if>
                <if test="item.measureUnit != null">
                    #{item.measureUnit},
                </if>
                <if test="item.measureUnit == null">
                    '',
                </if>
                <if test="item.depot != null">
                    #{item.depot},
                </if>
                <if test="item.depot == null">
                    '',
                </if>
                <if test="item.relSn != null">
                    #{item.relSn},
                </if>
                <if test="item.relSn == null">
                    '',
                </if>
                <if test="item.status != null">
                    #{item.status},
                </if>
                <if test="item.status == null">
                    '',
                </if>
                <if test="item.carInfo != null">
                    #{item.carInfo},
                </if>
                <if test="item.carInfo == null">
                    '',
                </if>
            </trim>
            )
        </foreach>
    </insert>

    <select id="getPrintedDetail" resultType="com.tqmall.legend.entity.warehousein.WarehouseInPrintVO">
      select a.id as id,
        b.format as format,
        a.goods_name as goodsName,
        a.car_info as carInfo,
        b.cat_id as catId,
        b.depot as depot,
        a.goods_count as goodsCount,
        a.purchase_price as purchasePrice,
        a.purchase_amount as purchaseAmount,
        b.stock as stock
      from legend_warehouse_in_detail a
      left join legend_goods b on (a.goods_id = b.id)
      where a.shop_id = #{shopId} and a.warehouse_in_sn = #{warehouseInSn}
    </select>

    <!-- 查询物料数 -->
    <select id="selectGoodsCount" resultType="java.lang.Integer">
        select count(DISTINCT goods_id)
        from legend_warehouse_in_detail
        <include refid="BaseWhereClause"/>
    </select>


    <sql id="BaseWhereClause2">
        <if test="shopId != null">
            and wid.shop_id = #{shopId}
        </if>
        <if test="goodsName != null">
            and wid.goods_name  like CONCAT('%',#{goodsName},'%')
        </if>
        <if test="goodsFormat != null">
            and wid.goods_format like CONCAT('%',#{goodsFormat},'%')
        </if>
        <if test="warehouseInSn != null">
            and wid.warehouse_in_sn = #{warehouseInSn}
        </if>
        <if test="supplierId != null">
            and wi.supplier_id = #{supplierId}
        </if>
        <if test="startTime != null &amp;&amp; endTime != null">
            and wid.gmt_create BETWEEN #{startTime} and #{endTime}
        </if>
        <if test="purchaseAgent != null">
            and wi.purchase_agent = #{purchaseAgent}
        </if>
        <if test="status != null">
            and wid.status = #{status}
        </if>
        <if test="status == null">
            and wid.status in ('HZRK','LZRK')
        </if>
    </sql>

    <!-- 查询总计信息 -->
    <select id="getTotalInfo" parameterType="com.tqmall.legend.entity.statistics.param.WarehouseInReportParam" resultType="com.tqmall.legend.pojo.warehouse.WarehouseInTotalVO">
        select ifnull(sum(wid.goods_count),0) as totalCount,
               ifnull(sum(wid.purchase_price * wid.goods_count),0) as totalPurchase,
               count(1) as totalSize
        from legend_warehouse_in_detail wid
        join legend_warehouse_in wi on wi.id = wid.warehouse_in_id
        where wid.is_deleted = 'N' and wi.is_deleted = 'N'
        <include refid="BaseWhereClause2"/>
    </select>

    <select id="getTotalAmount" parameterType="com.tqmall.legend.entity.statistics.param.WarehouseInReportParam" resultType="com.tqmall.legend.pojo.warehouse.WarehouseInTotalVO">
        select ifnull(sum(a.total_amount),0) totalAmount,
               ifnull(sum(a.tax),0) totalTax,
               ifnull(sum(a.freight),0) totalFreight
        FROM legend_warehouse_in a
        JOIN (
            select DISTINCT(wi.id) AS id
            from legend_warehouse_in_detail wid
            join legend_warehouse_in wi on wi.id = wid.warehouse_in_id
            where wid.is_deleted = 'N' and wi.is_deleted = 'N'
            <include refid="BaseWhereClause2"/>
        ) b ON a.id = b.id
    </select>

    <!-- 查询入库总数 -->
    <select id="selectReportCount" parameterType="com.tqmall.legend.entity.statistics.param.WarehouseInReportParam"
            resultType="java.lang.Integer">
        select count(1)
        from legend_warehouse_in_detail wid
        left join legend_warehouse_in wi on wi.id = wid.warehouse_in_id
        where wid.is_deleted = 'N'  and wi.is_deleted = 'N'
        <include refid="BaseWhereClause2" />
    </select>

    <select id="selectReportInfo" parameterType="com.tqmall.legend.entity.statistics.param.WarehouseInReportParam"
            resultType="com.tqmall.legend.bi.entity.StatisticsWarehouseIn">
        select wid.id as id
        from legend_warehouse_in_detail wid
        left join legend_warehouse_in wi on wi.id = wid.warehouse_in_id
        where wid.is_deleted = 'N'  and wi.is_deleted = 'N'
        <include refid="BaseWhereClause2" />
        group by wid.id
        order by wid.gmt_create DESC
        limit #{offset},#{size}
    </select>
</mapper>
