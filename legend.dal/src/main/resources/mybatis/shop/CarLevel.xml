<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tqmall.legend.dao.shop.CarLevelDao">

    <resultMap id="BaseResultMap" type="CarLevel" extends="COMMON.BASE_RESULT_MAP">
        <result column="name" property="name"/>
        <result column="shop_id" property="shopId"/>
        <result column="sort" property="sort"/>
    </resultMap>

    <sql id="BaseColumnList">
        <include refid="COMMON.BASE_COLUMN_LIST"/>
        name as name,
        shop_id as shopId,
        sort as sort
    </sql>

    <sql id="BaseWhereClause">
        <where>
            <trim prefixOverrides="and">
                <include refid="COMMON.BASE_WHERE_CLAUSE"/>
                <if test="name != null">
                    and name = #{name}
                </if>
                <if test="shopId != null">
                    and shop_id = #{shopId}
                </if>
                <if test="sort != null">
                    and sort = #{sort}
                </if>
                <if test="nameLike != null">
                    and name like CONCAT('%',#{nameLike},'%')
                </if>
            </trim>
        </where>
    </sql>

    <sql id="BaseUpdateSet">
        <set>
            <include refid="COMMON.BASE_UPDATE_SET"/>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId},
            </if>
            <if test="sort != null">
                sort = #{sort}
            </if>
        </set>
    </sql>

    <!-- 查询总数 -->
    <select id="selectCount" resultType="java.lang.Integer">
        select count(id)
        from legend_car_level
        <include refid="BaseWhereClause"/>
    </select>

    <!-- 查询 -->
    <select id="select" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_car_level
        <include refid="BaseWhereClause"/>
        <include refid="COMMON.ORDER_BY"/>
        <include refid="COMMON.LIMIT"/>
    </select>

    <!-- 根据ID查询 -->
    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_car_level
        where id = #{id}
    </select>

    <!-- 根据IDS批量查询 -->
    <select id="selectByIds" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_car_level
        where id in
        (
        <foreach collection="array" index="index" item="tag" separator=",">
            #{tag}
        </foreach>
        )
    </select>


    <!-- 根据IDS批量删除 -->
    <update id="deleteByIds">
        update legend_car_level
        set is_deleted='Y'
        where id in
        (
        <foreach collection="array" index="index" item="tag" separator=",">
            #{tag}
        </foreach>
        )
    </update>

    <!-- 根据ID删除 -->
    <update id="deleteById">
        update legend_car_level
        set is_deleted='Y'
        where id=#{id}
    </update>

    <!-- 删除 -->
    <delete id="delete">
        update legend_car_level
        set is_deleted='Y'
        <include refid="BaseWhereClause"/>
    </delete>

    <!-- 添加   -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into legend_car_level (
        <include refid="COMMON.BASE_INSERT_COLUMN"/>
        name,
        shop_id,
        sort
        )
        values (
        <include refid="COMMON.BASE_INSERT_VALUE"/>
        #{name},
        #{shopId},
        #{sort}
        )
    </insert>

    <!-- 通过ID更新 -->
    <update id="updateById">
        update legend_car_level
        <include refid="BaseUpdateSet"/>
        where id = #{id}
    </update>

    <!--批量插入-->
    <insert id = "batchInsert" parameterType="java.util.List">
        insert into legend_car_level (
        is_deleted,
        gmt_create,
        creator,
        gmt_modified,
        modifier,
        name,
        shop_id,
        sort
        )
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (
            'N',
            now(),
            #{item.creator},
            now(),
            #{item.creator},
            <if test = "item.name != null">#{item.name},</if>
            <if test = "item.name == null">'',</if>
            <if test = "item.shopId != null">#{item.shopId},</if>
            <if test = "item.shopId == null">0,</if>
            <if test = "item.sort != null">#{item.sort}</if>
            <if test = "item.sort == null">0</if>
            )
        </foreach>
    </insert>




    <select id="findCarLevelsByNames" resultMap="BaseResultMap">
        select <include refid="BaseColumnList"/>
        from legend_car_level
        where is_deleted = 'N'
        and shop_id = #{shopId}
        and name in
        <foreach collection="names" item="tag" index="index" separator="," open="(" close=")">
            #{tag}
        </foreach>
    </select>
</mapper>
