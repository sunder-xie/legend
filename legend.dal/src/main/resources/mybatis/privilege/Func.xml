<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tqmall.legend.dao.privilege.FuncDao">

    <resultMap id="BaseResultMap" type="com.tqmall.legend.entity.privilege.Func"
               extends="COMMON.BASE_RESULT_MAP">
        <result column="name" property="name"/>
        <result column="value" property="value"/>
        <result column="parent_id" property="parentId"/>
        <result column="shop_level" property="shopLevel"/>
        <result column="type" property="type"/>
        <result column="sort_id" property="sortId"/>
    </resultMap>

    <resultMap id="ResultMapForRoles" type="com.tqmall.legend.entity.privilege.FuncF">
        <result column="id" property="id"/>
        <result column="roles_id" property="rolesId"/>
        <result column="name" property="name"/>
        <result column="shop_level" property="shopLevel"/>
        <result column="value" property="value"/>
        <result column="parent_id" property="parentId"/>
        <result column="type" property="type"/>
        <result column="sort_id" property="sortId"/>
    </resultMap>

    <sql id="BaseColumnList">
        <include refid="COMMON.BASE_COLUMN_LIST"/>
        name as name,
        value as value,
        parent_id as parentId ,
        type as type,
        shop_level as shopLevel,
        sort_id as sortId
    </sql>

    <sql id="BaseWhereClause">
        <where>
            <trim prefixOverrides="and">
                <include refid="COMMON.BASE_WHERE_CLAUSE"/>
                <if test="name != null">
                    and name = #{name}
                </if>
                <if test="value != null">
                    and value = #{value}
                </if>
                <if test="parentId != null">
                    and parent_id = #{parentId}
                </if>
                <if test="type != null">
                    and type = #{type}
                </if>
                <if test="sortId != null">
                    and type = #{sortId}
                </if>
                <if test="shopLevel != null">
                    and shop_level=#{shopLevel}
                </if>

            </trim>
        </where>
    </sql>

    <sql id="BaseUpdateSet">
        <set>
            <include refid="COMMON.BASE_UPDATE_SET"/>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="value != null">
                value = #{value},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="sortId != null">
                type = #{sortId},
            </if>
            <if test="shopLevel != null">
               shop_level=#{shopLevel}
            </if>
        </set>
    </sql>

    <!-- 查询总数 -->
    <select id="selectCount" resultType="java.lang.Integer">
        select count(id)
        from legend_func
        <include refid="BaseWhereClause"/>
    </select>

    <!-- 查询 -->
    <select id="select" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_func
        <include refid="BaseWhereClause"/>
        <include refid="COMMON.ORDER_BY"/>
        <include refid="COMMON.LIMIT"/>
    </select>

    <!-- 根据ID查询 -->
    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_func
        where id = #{id}
    </select>

    <!-- 根据IDS批量查询 -->
    <select id="selectByIds" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_func
        where id in
        (
        <foreach collection="array" index="index" item="tag" separator=",">
            #{tag}
        </foreach>
        )
    </select>

    <!-- 查询全部 -->
    <select id="selectAll" resultMap="ResultMapForRoles">
        select
        <include refid="BaseColumnList"/>
        from legend_func
        where is_deleted='N' and shop_level=#{shopLevel}
        order by sort_id
    </select>

    <!-- 根据IDS批量删除 -->
    <update id="deleteByIds">
        update legend_func
        set is_deleted='Y'
        where id in
        (
        <foreach collection="array" index="index" item="tag" separator=",">
            #{tag}
        </foreach>
        )
    </update>

    <!-- 根据ID删除 -->
    <update id="deleteById">
        update legend_func
        set is_deleted='Y'
        where id=#{id}
    </update>

    <!-- 删除 -->
    <delete id="delete">
        update legend_func
        set is_deleted='Y'
        <include refid="BaseWhereClause"/>
    </delete>

    <!-- 添加   -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into legend_func (
        <include refid="COMMON.BASE_INSERT_COLUMN"/>
        name,
        value,
        parent_id,
        sort_id,
        shop_level
        )
        values (
        <include refid="COMMON.BASE_INSERT_VALUE"/>
        #{name},
        #{value},
        #{parentId},
        #{sortId},
        #{shopLevel}
        )
    </insert>

    <!-- 通过ID更新 -->
    <update id="updateById">
        update legend_func
        <include refid="BaseUpdateSet"/>
        where id = #{id}
    </update>

</mapper>
