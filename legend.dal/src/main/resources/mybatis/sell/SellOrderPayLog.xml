<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.tqmall.legend.dao.sell.SellOrderPayLogDao">

    <resultMap id = "BaseResultMap" type = "SellOrderPayLog" extends = "COMMON.BASE_RESULT_MAP">
        <result column = "sell_order_pay_id" property = "sellOrderPayId" />
        <result column = "msg_source" property = "msgSource" />
        <result column = "check_status" property = "checkStatus" />
        <result column = "pay_order_sn" property = "payOrderSn" />
        <result column = "pay_no" property = "payNo" />
        <result column = "pay_id" property = "payId" />
        <result column = "pay_amount" property = "payAmount" />
        <result column = "pay_result" property = "payResult" />
        <result column = "pay_time" property = "payTime" />
    </resultMap>

    <sql id = "BaseColumnList">
        <trim suffix="" suffixOverrides=",">
            <include refid = "COMMON.BASE_COLUMN_LIST" />
            sell_order_pay_id as sellOrderPayId,
            msg_source as msgSource,
            check_status as checkStatus,
            pay_order_sn as payOrderSn,
            pay_no as payNo,
            pay_id as payId,
            pay_amount as payAmount,
            pay_result as payResult,
            pay_time as payTime,
        </trim>
    </sql>

    <sql id = "BaseWhereClause">
        <where>
            <trim prefixOverrides = "and">
                <include refid = "COMMON.BASE_WHERE_CLAUSE" />
                <if test = "sellOrderPayId != null">
                    and sell_order_pay_id = #{sellOrderPayId}
                </if>
                <if test = "msgSource != null">
                    and msg_source = #{msgSource}
                </if>
                <if test = "checkStatus != null">
                    and check_status = #{checkStatus}
                </if>
                <if test = "payOrderSn != null">
                    and pay_order_sn = #{payOrderSn}
                </if>
                <if test = "payNo != null">
                    and pay_no = #{payNo}
                </if>
                <if test = "payId != null">
                    and pay_id = #{payId}
                </if>
                <if test = "payAmount != null">
                    and pay_amount = #{payAmount}
                </if>
                <if test = "payResult != null">
                    and pay_result = #{payResult}
                </if>
                <if test = "payTime != null">
                    and pay_time = #{payTime}
                </if>
            </trim>
        </where>
    </sql>

    <sql id = "BaseUpdateSet">
        <set>
            <trim suffix="" suffixOverrides=",">
                <include refid = "COMMON.BASE_UPDATE_SET" />
                <if test = "sellOrderPayId != null">
                    sell_order_pay_id = #{sellOrderPayId},
                </if>
                <if test = "msgSource != null">
                    msg_source = #{msgSource},
                </if>
                <if test = "checkStatus != null">
                    check_status = #{checkStatus},
                </if>
                <if test = "payOrderSn != null">
                    pay_order_sn = #{payOrderSn},
                </if>
                <if test = "payNo != null">
                    pay_no = #{payNo},
                </if>
                <if test = "payId != null">
                    pay_id = #{payId},
                </if>
                <if test = "payAmount != null">
                    pay_amount = #{payAmount},
                </if>
                <if test = "payResult != null">
                    pay_result = #{payResult},
                </if>
                <if test = "payTime != null">
                    pay_time = #{payTime},
                </if>
            </trim>
        </set>
    </sql>

    <!-- 查询总数 -->
    <select id = "selectCount" resultType = "java.lang.Integer">
        select count(id)
        from legend_sell_order_pay_log
        <include refid = "BaseWhereClause" />
    </select>

    <!-- 查询 -->
    <select id = "select" resultMap = "BaseResultMap">
        select
        <include refid = "BaseColumnList" />
        from legend_sell_order_pay_log
        <include refid = "BaseWhereClause" />
        <include refid = "COMMON.ORDER_BY" />
        <include refid = "COMMON.LIMIT" />
    </select>

    <!-- 根据ID查询 -->
    <select id = "selectById" resultMap = "BaseResultMap">
        select
        <include refid = "BaseColumnList" />
        from legend_sell_order_pay_log
        where id = #{id} and is_deleted = 'N'
    </select>

    <!-- 根据IDS批量查询 -->
    <select id = "selectByIds" resultMap = "BaseResultMap">
        select
        <include refid = "BaseColumnList" />
        from legend_sell_order_pay_log
        where id in
        (
        <foreach collection = "array" index = "index" item = "tag" separator = ",">
            #{tag}
        </foreach>
        ) and is_deleted = 'N'
    </select>


    <!-- 根据IDS批量删除 -->
    <update id = "deleteByIds">
        update legend_sell_order_pay_log
        set is_deleted='Y' , gmt_modified = now()
        where id in
        (
        <foreach collection = "array" index = "index" item = "tag" separator = ",">
            #{tag}
        </foreach>
        )
    </update>

    <!-- 根据ID删除 -->
    <update id = "deleteById">
        update legend_sell_order_pay_log
        set is_deleted='Y' , gmt_modified = now()
        where id=#{id}
    </update>

    <!-- 删除 -->
    <delete id = "delete">
        update legend_sell_order_pay_log
        set is_deleted='Y' , gmt_modified = now()
        <include refid = "BaseWhereClause" />
    </delete>

    <!-- 添加   -->
    <insert id = "insert" useGeneratedKeys = "true" keyProperty = "id">
        insert into legend_sell_order_pay_log (
        <trim suffix="" suffixOverrides=",">
            <include refid = "COMMON.BASE_INSERT_COLUMN" />
            <if test = "sellOrderPayId != null">
                sell_order_pay_id,
            </if>
            <if test = "msgSource != null">
                msg_source,
            </if>
            <if test = "checkStatus != null">
                check_status,
            </if>
            <if test = "payOrderSn != null">
                pay_order_sn,
            </if>
            <if test = "payNo != null">
                pay_no,
            </if>
            <if test = "payId != null">
                pay_id,
            </if>
            <if test = "payAmount != null">
                pay_amount,
            </if>
            <if test = "payResult != null">
                pay_result,
            </if>
            <if test = "payTime != null">
                pay_time,
            </if>
        </trim>
        )
        values (
        <trim suffix="" suffixOverrides=",">
            <include refid = "COMMON.BASE_INSERT_VALUE" />
            <if test = "sellOrderPayId != null">
                #{sellOrderPayId},
            </if>
            <if test = "msgSource != null">
                #{msgSource},
            </if>
            <if test = "checkStatus != null">
                #{checkStatus},
            </if>
            <if test = "payOrderSn != null">
                #{payOrderSn},
            </if>
            <if test = "payNo != null">
                #{payNo},
            </if>
            <if test = "payId != null">
                #{payId},
            </if>
            <if test = "payAmount != null">
                #{payAmount},
            </if>
            <if test = "payResult != null">
                #{payResult},
            </if>
            <if test = "payTime != null">
                #{payTime},
            </if>
        </trim>
        )
    </insert>

    <!-- 通过ID更新 -->
    <update id = "updateById">
        update legend_sell_order_pay_log
        <include refid = "BaseUpdateSet" />
        where id = #{id}
    </update>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into legend_sell_order_pay_log (
        <trim suffix="" suffixOverrides=",">
            is_deleted,
            gmt_create,
            creator,
            gmt_modified,
            modifier,
            sell_order_pay_id,
            msg_source,
            check_status,
            pay_order_sn,
            pay_no,
            pay_id,
            pay_amount,
            pay_result,
            pay_time,
        </trim>
        )
        values

        <foreach collection="list" item="item" index="index" separator=",">
            (
            <trim suffix="" suffixOverrides=",">
                'N',
                <if test="item.gmtCreate != null">
                    #{item.gmtCreate},
                </if>
                <if test="item.gmtCreate == null">
                    now(),
                </if>
                <if test="item.creator != null">
                    #{item.creator},
                </if>
                <if test="item.creator == null">
                    0,
                </if>
                <if test="item.gmtModified != null">
                    #{item.gmtModified},
                </if>
                <if test="item.gmtModified == null">
                    now(),
                </if>
                <if test="item.creator != null">
                    #{item.creator},
                </if>
                <if test="item.creator == null">
                    0,
                </if>
                <if test="item.sellOrderPayId != null">
                    #{item.sellOrderPayId},
                </if>
                <if test="item.sellOrderPayId == null">
                    NULL,
                </if>
                <if test="item.msgSource != null">
                    #{item.msgSource},
                </if>
                <if test="item.msgSource == null">
                    0 ,
                </if>
                <if test="item.checkStatus != null">
                    #{item.checkStatus},
                </if>
                <if test="item.checkStatus == null">
                    0 ,
                </if>
                <if test="item.payOrderSn != null">
                    #{item.payOrderSn},
                </if>
                <if test="item.payOrderSn == null">
                    '',
                </if>
                <if test="item.payNo != null">
                    #{item.payNo},
                </if>
                <if test="item.payNo == null">
                    '',
                </if>
                <if test="item.payId != null">
                    #{item.payId},
                </if>
                <if test="item.payId == null">
                    NULL,
                </if>
                <if test="item.payAmount != null">
                    #{item.payAmount},
                </if>
                <if test="item.payAmount == null">
                    0.00,
                </if>
                <if test="item.payResult != null">
                    #{item.payResult},
                </if>
                <if test="item.payResult == null">
                    0 ,
                </if>
                <if test="item.payTime != null">
                    #{item.payTime},
                </if>
                <if test="item.payTime == null">
                    '1970-01-01 12:00:00',
                </if>
            </trim>
            )
        </foreach>
    </insert>

</mapper>
