<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tqmall.legend.dao.order.OrderGoodsDao">
    <resultMap id="BaseResultMap" type="OrderGoods" extends="COMMON.BASE_RESULT_MAP">
        <result column="shop_id" property="shopId"/>
        <result column="order_id" property="orderId"/>
        <result column="goods_id" property="goodsId"/>
        <result column="goods_number" property="goodsNumber"/>
        <result column="goods_price" property="goodsPrice"/>
        <result column="goods_amount" property="goodsAmount"/>
        <result column="sold_price" property="soldPrice"/>
        <result column="order_sn" property="orderSn"/>
        <result column="discount" property="discount"/>
        <result column="goods_sn" property="goodsSn"/>
        <result column="goods_name" property="goodsName"/>
        <result column="goods_format" property="goodsFormat"/>
        <result column="inventory_price" property="inventoryPrice"/>
        <result column="sold_amount" property="soldAmount"/>
        <result column="measure_unit" property="measureUnit"/>
        <result column="rel_order_service_id" property="relOrderServiceId"/>
        <result column="goods_note" property="goodsNote"/>
        <result column="goods_type" property="goodsType"/>
        <result column="sale_id" property="saleId"/>

    </resultMap>

    <sql id="BaseColumnList">
        <trim suffix="" suffixOverrides=",">
        <include refid="COMMON.BASE_COLUMN_LIST"/>
        shop_id as shopId,
        order_id as orderId,
        goods_id as goodsId,
        goods_number as goodsNumber,
        goods_price as goodsPrice,
        goods_amount as goodsAmount,
        sold_price as soldPrice,
        order_sn as orderSn,
        discount as discount,
        goods_sn as goodsSn,
        goods_name as goodsName,
        goods_format as goodsFormat,
        inventory_price as inventoryPrice,
        sold_amount as soldAmount,
        measure_unit as measureUnit,
        rel_order_service_id as relOrderServiceId,
        goods_note as goodsNote,
        goods_type as goodsType,
        sale_id as saleId,
        </trim>
    </sql>

    <sql id="BaseWhereClause">
        <where>
            <trim prefixOverrides="and">
                <include refid="COMMON.BASE_WHERE_CLAUSE"/>

                and shop_id = #{shopId}

                <if test="orderId != null">
                    and order_id = #{orderId}
                </if>
                <if test="goodsId != null">
                    and goods_id = #{goodsId}
                </if>
                <if test="goodsNumber != null">
                    and goods_number = #{goodsNumber}
                </if>
                <if test="goodsPrice != null">
                    and goods_price = #{goodsPrice}
                </if>
                <if test="goodsAmount != null">
                    and goods_amount = #{goodsAmount}
                </if>
                <if test="soldPrice != null">
                    and sold_price = #{soldPrice}
                </if>
                <if test="orderSn != null">
                    and order_sn = #{orderSn}
                </if>
                <if test="discount != null">
                    and discount = #{discount}
                </if>
                <if test="goodsSn != null">
                    and goods_sn = #{goodsSn}
                </if>
                <if test="goodsName != null">
                    and goods_name = #{goodsName}
                </if>
                <if test="goodsFormat != null">
                    and goods_format = #{goodsFormat}
                </if>
                <if test="inventoryPrice != null">
                    and inventory_price = #{inventoryPrice}
                </if>
                <if test="soldAmount != null">
                    and sold_amount = #{soldAmount}
                </if>
                <if test="measureUnit != null">
                    and measure_unit = #{measureUnit}
                </if>
                <if test="relOrderServiceId != null">
                    and rel_order_service_id = #{relOrderServiceId}
                </if>
                <if test="goodsNote != null">
                    and goods_note = #{goodsNote}
                </if>
                <if test="goodsType != null">
                    and goods_type = #{goodsType}
                </if>
                <if test="saleId != null">
                    and sale_id = #{saleId}
                </if>
                <if test="orderIds != null">
                    and order_id in
                    (
                    <foreach collection="orderIds" index="index" item="tag" separator=",">
                        #{tag}
                    </foreach>
                    )
                </if>
            </trim>
        </where>
    </sql>

    <sql id="BaseUpdateSet">
        <set>
            <trim suffix="" suffixOverrides=",">
                <include refid="COMMON.BASE_UPDATE_SET"/>
                <if test="shopId != null">
                    shop_id = #{shopId},
                </if>
                <if test="orderId != null">
                    order_id = #{orderId},
                </if>
                <if test="goodsId != null">
                    goods_id = #{goodsId},
                </if>
                <if test="goodsNumber != null">
                    goods_number = #{goodsNumber},
                </if>
                <if test="goodsPrice != null">
                    goods_price = #{goodsPrice},
                </if>
                <if test="goodsAmount != null">
                    goods_amount = #{goodsAmount},
                </if>
                <if test="soldPrice != null">
                    sold_price = #{soldPrice},
                </if>
                <if test="orderSn != null">
                    order_sn = #{orderSn},
                </if>
                <if test="discount != null">
                    discount = #{discount},
                </if>
                <if test="goodsSn != null">
                    goods_sn = #{goodsSn},
                </if>
                <if test="goodsName != null">
                    goods_name = #{goodsName},
                </if>
                <if test="goodsFormat != null">
                    goods_format = #{goodsFormat},
                </if>
                <if test="inventoryPrice != null">
                    inventory_price = #{inventoryPrice},
                </if>
                <if test="soldAmount != null">
                    sold_amount = #{soldAmount},
                </if>
                <if test="measureUnit != null">
                    measure_unit = #{measureUnit},
                </if>
                <if test="relOrderServiceId != null">
                    rel_order_service_id = #{relOrderServiceId},
                </if>
                <if test="goodsNote != null">
                    goods_note = #{goodsNote},
                </if>
                <if test="goodsType != null">
                    goods_type = #{goodsType},
                </if>
                <if test="saleId != null">
                    sale_id = #{saleId},
                </if>
            </trim>
        </set>
    </sql>

    <!-- 查询总数 -->
    <select id="selectCount" resultType="java.lang.Integer">
        select count(id)
        from legend_order_goods
        <include refid="BaseWhereClause"/>
    </select>

    <!-- 查询 -->
    <select id="select" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_order_goods
        <include refid="BaseWhereClause"/>
        <include refid="COMMON.ORDER_BY"/>
        <include refid="COMMON.LIMIT"/>
    </select>


    <!-- 根据ID查询 -->
    <select id="selectById" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_order_goods
        where id = #{id}
    </select>

    <!-- 根据IDS批量查询 -->
    <select id="selectByIds" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_order_goods
        where id in
        (
        <foreach collection="array" index="index" item="tag" separator=",">
            #{tag}
        </foreach>
        )
    </select>

    <!-- 根据IDS批量删除 -->
    <update id="deleteByIds">
        update legend_order_goods
        set is_deleted='Y'
        where id in
        (
        <foreach collection="array" index="index" item="tag" separator=",">
            #{tag}
        </foreach>
        )
    </update>

    <!-- 根据ID删除 -->
    <update id="deleteById">
        update legend_order_goods
        set is_deleted='Y'
        where id=#{id}
    </update>

    <!-- 删除 -->
    <delete id="delete">
        update legend_order_goods
        set is_deleted='Y'
        <include refid="BaseWhereClause"/>
    </delete>

    <!-- 添加   -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into legend_order_goods (
        <trim suffix="" suffixOverrides=",">
            <include refid="COMMON.BASE_INSERT_COLUMN"/>
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="goodsId != null">
                goods_id,
            </if>
            <if test="goodsNumber != null">
                goods_number,
            </if>
            <if test="goodsPrice != null">
                goods_price,
            </if>
            <if test="goodsAmount != null">
                goods_amount,
            </if>
            <if test="soldPrice != null">
                sold_price,
            </if>
            <if test="orderSn != null">
                order_sn,
            </if>
            <if test="discount != null">
                discount,
            </if>
            <if test="goodsSn != null">
                goods_sn,
            </if>
            <if test="goodsName != null">
                goods_name,
            </if>
            <if test="goodsFormat != null">
                goods_format,
            </if>
            <if test="inventoryPrice != null">
                inventory_price,
            </if>
            <if test="soldAmount != null">
                sold_amount,
            </if>
            <if test="measureUnit != null">
                measure_unit,
            </if>
            <if test="relOrderServiceId != null">
                rel_order_service_id,
            </if>
            <if test="goodsNote != null">
                goods_note,
            </if>
            <if test="goodsType != null">
                goods_type,
            </if>
            <if test="saleId != null">
                sale_id,
            </if>
        </trim>
        )
        values (
        <trim suffix="" suffixOverrides=",">
            <include refid="COMMON.BASE_INSERT_VALUE"/>
            <if test="shopId != null">
                #{shopId},
            </if>
            <if test="orderId != null">
                #{orderId},
            </if>
            <if test="goodsId != null">
                #{goodsId},
            </if>
            <if test="goodsNumber != null">
                #{goodsNumber},
            </if>
            <if test="goodsPrice != null">
                #{goodsPrice},
            </if>
            <if test="goodsAmount != null">
                #{goodsAmount},
            </if>
            <if test="soldPrice != null">
                #{soldPrice},
            </if>
            <if test="orderSn != null">
                #{orderSn},
            </if>
            <if test="discount != null">
                #{discount},
            </if>
            <if test="goodsSn != null">
                #{goodsSn},
            </if>
            <if test="goodsName != null">
                #{goodsName},
            </if>
            <if test="goodsFormat != null">
                #{goodsFormat},
            </if>
            <if test="inventoryPrice != null">
                #{inventoryPrice},
            </if>
            <if test="soldAmount != null">
                #{soldAmount},
            </if>
            <if test="measureUnit != null">
                #{measureUnit},
            </if>
            <if test="relOrderServiceId != null">
                #{relOrderServiceId},
            </if>
            <if test="goodsNote != null">
                #{goodsNote},
            </if>
            <if test="goodsType != null">
                #{goodsType},
            </if>
            <if test="saleId != null">
                #{saleId},
            </if>
        </trim>
        )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        insert into legend_order_goods (
        <trim suffix="" suffixOverrides=",">
            is_deleted,
            gmt_create,
            creator,
            gmt_modified,
            modifier,
            shop_id,
            order_id,
            goods_id,
            goods_number,
            goods_price,
            goods_amount,
            sold_price,
            order_sn,
            discount,
            goods_sn,
            goods_name,
            goods_format,
            inventory_price,
            sold_amount,
            measure_unit,
            rel_order_service_id,
            goods_note,
            goods_type,
            sale_id,
        </trim>
        )
        values

        <foreach collection="list" item="item" index="index" separator=",">
            (
            <trim suffix="" suffixOverrides=",">
                'N',
                <if test="item.gmtCreate != null">
                    #{item.gmtCreate},
                </if>
                <if test="item.gmtCreate == null">
                    now(),
                </if>
                <if test="item.creator != null">
                    #{item.creator},
                </if>
                <if test="item.creator == null">
                    0,
                </if>
                <if test="item.gmtModified != null">
                    #{item.gmtModified},
                </if>
                <if test="item.gmtModified == null">
                    now(),
                </if>
                <if test="item.creator != null">
                    #{item.creator},
                </if>
                <if test="item.creator == null">
                    0,
                </if>
                <if test="item.shopId != null">
                    #{item.shopId},
                </if>
                <if test="item.shopId == null">
                    0 ,
                </if>
                <if test="item.orderId != null">
                    #{item.orderId},
                </if>
                <if test="item.orderId == null">
                    0 ,
                </if>
                <if test="item.goodsId != null">
                    #{item.goodsId},
                </if>
                <if test="item.goodsId == null">
                    0 ,
                </if>
                <if test="item.goodsNumber != null">
                    #{item.goodsNumber},
                </if>
                <if test="item.goodsNumber == null">
                    0 ,
                </if>
                <if test="item.goodsPrice != null">
                    #{item.goodsPrice},
                </if>
                <if test="item.goodsPrice == null">
                    0 ,
                </if>
                <if test="item.goodsAmount != null">
                    #{item.goodsAmount},
                </if>
                <if test="item.goodsAmount == null">
                    0 ,
                </if>
                <if test="item.soldPrice != null">
                    #{item.soldPrice},
                </if>
                <if test="item.soldPrice == null">
                    0 ,
                </if>
                <if test="item.orderSn != null">
                    #{item.orderSn},
                </if>
                <if test="item.orderSn == null">
                    NULL ,
                </if>
                <if test="item.discount != null">
                    #{item.discount},
                </if>
                <if test="item.discount == null">
                    0 ,
                </if>
                <if test="item.goodsSn != null">
                    #{item.goodsSn},
                </if>
                <if test="item.goodsSn == null">
                    NULL ,
                </if>
                <if test="item.goodsName != null">
                    #{item.goodsName},
                </if>
                <if test="item.goodsName == null">
                    NULL ,
                </if>
                <if test="item.goodsFormat != null">
                    #{item.goodsFormat},
                </if>
                <if test="item.goodsFormat == null">
                    NULL ,
                </if>
                <if test="item.inventoryPrice != null">
                    #{item.inventoryPrice},
                </if>
                <if test="item.inventoryPrice == null">
                    0 ,
                </if>
                <if test="item.soldAmount != null">
                    #{item.soldAmount},
                </if>
                <if test="item.soldAmount == null">
                    0 ,
                </if>
                <if test="item.measureUnit != null">
                    #{item.measureUnit},
                </if>
                <if test="item.measureUnit == null">
                    NULL ,
                </if>
                <if test="item.relOrderServiceId != null">
                    #{item.relOrderServiceId},
                </if>
                <if test="item.relOrderServiceId == null">
                    0 ,
                </if>
                <if test="item.goodsNote != null">
                    #{item.goodsNote},
                </if>
                <if test="item.goodsNote == null">
                    NULL ,
                </if>
                <if test="item.goodsType != null">
                    #{item.goodsType},
                </if>
                <if test="item.goodsType == null">
                    0 ,
                </if>
                <if test="item.saleId != null">
                    #{item.saleId} ,
                </if>
                <if test="item.saleId == null">
                    0,
                </if>
            </trim>
            )
        </foreach>
    </insert>

    <!-- 通过ID更新 -->
    <update id="updateById">
        update legend_order_goods
        <include refid="BaseUpdateSet"/>
        where id = #{id}
    </update>

    <select id="selectByOrderIds" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from legend_order_goods
        where is_deleted = 'N'
        and order_id in
        <foreach collection="orderIds" index="index" item="tag" separator="," close=")" open="(">
            #{tag}
        </foreach>
    </select>

    <!-- 分页查询客户选购物料历史-->
    <select id="getHistoryGoodList" resultMap="BaseResultMap">
        SELECT
        <include refid="BaseColumnList"/>
        FROM
        legend_order_goods
        WHERE
        order_id IN
        (
        <foreach collection="orderIdList" index="index" item="orderId" separator=",">
            #{orderId}
        </foreach>
        )
        AND is_deleted = 'N'
        <include refid="COMMON.ORDER_BY"/>
        <include refid="COMMON.LIMIT"/>
    </select>


    <select id="countHistoryGoodList" resultType="java.lang.Integer">
        SELECT
        count(id)
        FROM
        legend_order_goods
        WHERE
        order_id IN
        (
        <foreach collection="orderIdList" index="index" item="orderId" separator=",">
            #{orderId}
        </foreach>
        )
        AND is_deleted = 'N'
    </select>

</mapper> 
